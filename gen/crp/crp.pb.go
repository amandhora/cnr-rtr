// Code generated by protoc-gen-go.
// source: crp.proto
// DO NOT EDIT!

/*
Package crp is a generated protocol buffer package.

It is generated from these files:
	crp.proto

It has these top-level messages:
	BrqDevice
	BrqSlot
	CnrPubCat
	CtpTgtAds
	ConvHdr
	CapConvMsg
	CnrUTID
	CnrNumOpqKV
	CnrOpqKV
	CrpCookieSyncReq
	CrpCookieSyncResp
	CnrAppUIDs
	CrpOptOut
	CrpWinBcn
	CrpRecReq
	CrpRecRep
	CrpConvBcn
	CrpMsg
	CrpRecReqV2
	CrpRecRepV2
	DspReq
	DspRsp
*/
package crp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// This is bitmap as we should be able to send multiple types in one var, if need.
type CnrFoldType int32

const (
	CnrFoldType_CNR_FOLD_TYPE_UNSPECIFIED CnrFoldType = 1
	CnrFoldType_CNR_FOLD_TYPE_ABOVE       CnrFoldType = 2
	CnrFoldType_CNR_FOLD_TYPE_BELOW       CnrFoldType = 4
)

var CnrFoldType_name = map[int32]string{
	1: "CNR_FOLD_TYPE_UNSPECIFIED",
	2: "CNR_FOLD_TYPE_ABOVE",
	4: "CNR_FOLD_TYPE_BELOW",
}
var CnrFoldType_value = map[string]int32{
	"CNR_FOLD_TYPE_UNSPECIFIED": 1,
	"CNR_FOLD_TYPE_ABOVE":       2,
	"CNR_FOLD_TYPE_BELOW":       4,
}

func (x CnrFoldType) Enum() *CnrFoldType {
	p := new(CnrFoldType)
	*p = x
	return p
}
func (x CnrFoldType) String() string {
	return proto.EnumName(CnrFoldType_name, int32(x))
}
func (x *CnrFoldType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CnrFoldType_value, data, "CnrFoldType")
	if err != nil {
		return err
	}
	*x = CnrFoldType(value)
	return nil
}
func (CnrFoldType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ConvMsgType int32

const (
	ConvMsgType_CONV_TYPE_WEB    ConvMsgType = 0
	ConvMsgType_CONV_TYPE_WALKIN ConvMsgType = 1
)

var ConvMsgType_name = map[int32]string{
	0: "CONV_TYPE_WEB",
	1: "CONV_TYPE_WALKIN",
}
var ConvMsgType_value = map[string]int32{
	"CONV_TYPE_WEB":    0,
	"CONV_TYPE_WALKIN": 1,
}

func (x ConvMsgType) Enum() *ConvMsgType {
	p := new(ConvMsgType)
	*p = x
	return p
}
func (x ConvMsgType) String() string {
	return proto.EnumName(ConvMsgType_name, int32(x))
}
func (x *ConvMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConvMsgType_value, data, "ConvMsgType")
	if err != nil {
		return err
	}
	*x = ConvMsgType(value)
	return nil
}
func (ConvMsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CrpMsgType int32

const (
	CrpMsgType_CRP_MSG_RES            CrpMsgType = 0
	CrpMsgType_CRP_MSG_RECREQ         CrpMsgType = 1
	CrpMsgType_CRP_MSG_RECREP         CrpMsgType = 2
	CrpMsgType_CRP_MSG_WBCN           CrpMsgType = 3
	CrpMsgType_CRP_MSG_OPTOUT         CrpMsgType = 4
	CrpMsgType_CRP_MSG_CONVBCN        CrpMsgType = 5
	CrpMsgType_CRP_MSG_COOKIESYNCREQ  CrpMsgType = 6
	CrpMsgType_CRP_MSG_COOKIESYNCRESP CrpMsgType = 7
	// NOTE: Please update CRP_MSG_MAX below
	CrpMsgType_CRP_MSG_MAX CrpMsgType = 8
)

var CrpMsgType_name = map[int32]string{
	0: "CRP_MSG_RES",
	1: "CRP_MSG_RECREQ",
	2: "CRP_MSG_RECREP",
	3: "CRP_MSG_WBCN",
	4: "CRP_MSG_OPTOUT",
	5: "CRP_MSG_CONVBCN",
	6: "CRP_MSG_COOKIESYNCREQ",
	7: "CRP_MSG_COOKIESYNCRESP",
	8: "CRP_MSG_MAX",
}
var CrpMsgType_value = map[string]int32{
	"CRP_MSG_RES":            0,
	"CRP_MSG_RECREQ":         1,
	"CRP_MSG_RECREP":         2,
	"CRP_MSG_WBCN":           3,
	"CRP_MSG_OPTOUT":         4,
	"CRP_MSG_CONVBCN":        5,
	"CRP_MSG_COOKIESYNCREQ":  6,
	"CRP_MSG_COOKIESYNCRESP": 7,
	"CRP_MSG_MAX":            8,
}

func (x CrpMsgType) Enum() *CrpMsgType {
	p := new(CrpMsgType)
	*p = x
	return p
}
func (x CrpMsgType) String() string {
	return proto.EnumName(CrpMsgType_name, int32(x))
}
func (x *CrpMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CrpMsgType_value, data, "CrpMsgType")
	if err != nil {
		return err
	}
	*x = CrpMsgType(value)
	return nil
}
func (CrpMsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// Reason Code bits returned by CMGW
type CrpNoAdsCodes int32

const (
	CrpNoAdsCodes_TGT_ONLY_SUB        CrpNoAdsCodes = 1
	CrpNoAdsCodes_NULL_DSI            CrpNoAdsCodes = 2
	CrpNoAdsCodes_ADM_COMM_FAIL       CrpNoAdsCodes = 4
	CrpNoAdsCodes_CMGW_NO_RES         CrpNoAdsCodes = 8
	CrpNoAdsCodes_CMGW_DB_FAIL        CrpNoAdsCodes = 16
	CrpNoAdsCodes_DNT_DSI             CrpNoAdsCodes = 32
	CrpNoAdsCodes_CATE_COMM_FAIL      CrpNoAdsCodes = 64
	CrpNoAdsCodes_CMGW_RESRC_DBG_FAIL CrpNoAdsCodes = 128
	CrpNoAdsCodes_CATE_COMM_DBG_FAIL  CrpNoAdsCodes = 256
	CrpNoAdsCodes_CMGW_NRM_ENABLED    CrpNoAdsCodes = 512
	CrpNoAdsCodes_ONE_DSI             CrpNoAdsCodes = 1024
)

var CrpNoAdsCodes_name = map[int32]string{
	1:    "TGT_ONLY_SUB",
	2:    "NULL_DSI",
	4:    "ADM_COMM_FAIL",
	8:    "CMGW_NO_RES",
	16:   "CMGW_DB_FAIL",
	32:   "DNT_DSI",
	64:   "CATE_COMM_FAIL",
	128:  "CMGW_RESRC_DBG_FAIL",
	256:  "CATE_COMM_DBG_FAIL",
	512:  "CMGW_NRM_ENABLED",
	1024: "ONE_DSI",
}
var CrpNoAdsCodes_value = map[string]int32{
	"TGT_ONLY_SUB":        1,
	"NULL_DSI":            2,
	"ADM_COMM_FAIL":       4,
	"CMGW_NO_RES":         8,
	"CMGW_DB_FAIL":        16,
	"DNT_DSI":             32,
	"CATE_COMM_FAIL":      64,
	"CMGW_RESRC_DBG_FAIL": 128,
	"CATE_COMM_DBG_FAIL":  256,
	"CMGW_NRM_ENABLED":    512,
	"ONE_DSI":             1024,
}

func (x CrpNoAdsCodes) Enum() *CrpNoAdsCodes {
	p := new(CrpNoAdsCodes)
	*p = x
	return p
}
func (x CrpNoAdsCodes) String() string {
	return proto.EnumName(CrpNoAdsCodes_name, int32(x))
}
func (x *CrpNoAdsCodes) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CrpNoAdsCodes_value, data, "CrpNoAdsCodes")
	if err != nil {
		return err
	}
	*x = CrpNoAdsCodes(value)
	return nil
}
func (CrpNoAdsCodes) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type BrqDevice struct {
	Os                           *string `protobuf:"bytes,1,opt,name=os" json:"os,omitempty"`
	Osv                          *string `protobuf:"bytes,2,opt,name=osv" json:"osv,omitempty"`
	Make                         *string `protobuf:"bytes,3,opt,name=make" json:"make,omitempty"`
	Model                        *string `protobuf:"bytes,4,opt,name=model" json:"model,omitempty"`
	Browtype                     *uint32 `protobuf:"varint,5,opt,name=browtype" json:"browtype,omitempty"`
	Browver                      *uint32 `protobuf:"varint,6,opt,name=browver" json:"browver,omitempty"`
	Carrier                      *uint32 `protobuf:"varint,7,opt,name=carrier" json:"carrier,omitempty"`
	Ip                           *uint32 `protobuf:"varint,8,opt,name=ip" json:"ip,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *BrqDevice) Reset()                    { *m = BrqDevice{} }
func (m *BrqDevice) String() string            { return proto.CompactTextString(m) }
func (*BrqDevice) ProtoMessage()               {}
func (*BrqDevice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

var extRange_BrqDevice = []proto.ExtensionRange{
	{9, 15},
}

func (*BrqDevice) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_BrqDevice
}

func (m *BrqDevice) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

func (m *BrqDevice) GetOsv() string {
	if m != nil && m.Osv != nil {
		return *m.Osv
	}
	return ""
}

func (m *BrqDevice) GetMake() string {
	if m != nil && m.Make != nil {
		return *m.Make
	}
	return ""
}

func (m *BrqDevice) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *BrqDevice) GetBrowtype() uint32 {
	if m != nil && m.Browtype != nil {
		return *m.Browtype
	}
	return 0
}

func (m *BrqDevice) GetBrowver() uint32 {
	if m != nil && m.Browver != nil {
		return *m.Browver
	}
	return 0
}

func (m *BrqDevice) GetCarrier() uint32 {
	if m != nil && m.Carrier != nil {
		return *m.Carrier
	}
	return 0
}

func (m *BrqDevice) GetIp() uint32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

type BrqSlot struct {
	Width                        *uint32 `protobuf:"varint,1,req,name=width" json:"width,omitempty"`
	Height                       *uint32 `protobuf:"varint,2,req,name=height" json:"height,omitempty"`
	Foldp                        *uint32 `protobuf:"varint,3,req,name=foldp" json:"foldp,omitempty"`
	Bfiletype                    *uint64 `protobuf:"varint,4,req,name=bfiletype" json:"bfiletype,omitempty"`
	Blang                        *uint64 `protobuf:"varint,5,req,name=blang" json:"blang,omitempty"`
	Bcat                         *uint64 `protobuf:"varint,6,req,name=bcat" json:"bcat,omitempty"`
	Bcontent                     *uint64 `protobuf:"varint,7,req,name=bcontent" json:"bcontent,omitempty"`
	PlacementId                  *uint64 `protobuf:"varint,8,opt,name=placement_id" json:"placement_id,omitempty"`
	MinCpm                       *int64  `protobuf:"varint,9,opt,name=min_cpm" json:"min_cpm,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *BrqSlot) Reset()                    { *m = BrqSlot{} }
func (m *BrqSlot) String() string            { return proto.CompactTextString(m) }
func (*BrqSlot) ProtoMessage()               {}
func (*BrqSlot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

var extRange_BrqSlot = []proto.ExtensionRange{
	{10, 15},
}

func (*BrqSlot) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_BrqSlot
}

func (m *BrqSlot) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *BrqSlot) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *BrqSlot) GetFoldp() uint32 {
	if m != nil && m.Foldp != nil {
		return *m.Foldp
	}
	return 0
}

func (m *BrqSlot) GetBfiletype() uint64 {
	if m != nil && m.Bfiletype != nil {
		return *m.Bfiletype
	}
	return 0
}

func (m *BrqSlot) GetBlang() uint64 {
	if m != nil && m.Blang != nil {
		return *m.Blang
	}
	return 0
}

func (m *BrqSlot) GetBcat() uint64 {
	if m != nil && m.Bcat != nil {
		return *m.Bcat
	}
	return 0
}

func (m *BrqSlot) GetBcontent() uint64 {
	if m != nil && m.Bcontent != nil {
		return *m.Bcontent
	}
	return 0
}

func (m *BrqSlot) GetPlacementId() uint64 {
	if m != nil && m.PlacementId != nil {
		return *m.PlacementId
	}
	return 0
}

func (m *BrqSlot) GetMinCpm() int64 {
	if m != nil && m.MinCpm != nil {
		return *m.MinCpm
	}
	return 0
}

type CnrPubCat struct {
	PublisherId                  *uint64 `protobuf:"varint,1,opt,name=publisher_id" json:"publisher_id,omitempty"`
	SiteId                       *uint64 `protobuf:"varint,2,opt,name=site_id" json:"site_id,omitempty"`
	Cat                          *uint64 `protobuf:"varint,3,opt,name=cat" json:"cat,omitempty"`
	Url                          *string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	InventoryCat                 *uint64 `protobuf:"varint,5,opt,name=inventory_cat" json:"inventory_cat,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *CnrPubCat) Reset()                    { *m = CnrPubCat{} }
func (m *CnrPubCat) String() string            { return proto.CompactTextString(m) }
func (*CnrPubCat) ProtoMessage()               {}
func (*CnrPubCat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

var extRange_CnrPubCat = []proto.ExtensionRange{
	{6, 10},
}

func (*CnrPubCat) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_CnrPubCat
}

func (m *CnrPubCat) GetPublisherId() uint64 {
	if m != nil && m.PublisherId != nil {
		return *m.PublisherId
	}
	return 0
}

func (m *CnrPubCat) GetSiteId() uint64 {
	if m != nil && m.SiteId != nil {
		return *m.SiteId
	}
	return 0
}

func (m *CnrPubCat) GetCat() uint64 {
	if m != nil && m.Cat != nil {
		return *m.Cat
	}
	return 0
}

func (m *CnrPubCat) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *CnrPubCat) GetInventoryCat() uint64 {
	if m != nil && m.InventoryCat != nil {
		return *m.InventoryCat
	}
	return 0
}

type CtpTgtAds struct {
	AdId                         *uint64  `protobuf:"varint,1,req,name=ad_id" json:"ad_id,omitempty"`
	CreId                        []uint64 `protobuf:"varint,2,rep,name=cre_id" json:"cre_id,omitempty"`
	ObjId                        *uint64  `protobuf:"varint,3,req,name=obj_id" json:"obj_id,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *CtpTgtAds) Reset()                    { *m = CtpTgtAds{} }
func (m *CtpTgtAds) String() string            { return proto.CompactTextString(m) }
func (*CtpTgtAds) ProtoMessage()               {}
func (*CtpTgtAds) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

var extRange_CtpTgtAds = []proto.ExtensionRange{
	{4, 10},
}

func (*CtpTgtAds) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_CtpTgtAds
}

func (m *CtpTgtAds) GetAdId() uint64 {
	if m != nil && m.AdId != nil {
		return *m.AdId
	}
	return 0
}

func (m *CtpTgtAds) GetCreId() []uint64 {
	if m != nil {
		return m.CreId
	}
	return nil
}

func (m *CtpTgtAds) GetObjId() uint64 {
	if m != nil && m.ObjId != nil {
		return *m.ObjId
	}
	return 0
}

// TODO: Move Conv Messages to their own file(s) in next release(s).
type ConvHdr struct {
	Type             *ConvMsgType `protobuf:"varint,1,req,name=type,enum=ConvMsgType" json:"type,omitempty"`
	Uid              *uint64      `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ConvHdr) Reset()                    { *m = ConvHdr{} }
func (m *ConvHdr) String() string            { return proto.CompactTextString(m) }
func (*ConvHdr) ProtoMessage()               {}
func (*ConvHdr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ConvHdr) GetType() ConvMsgType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ConvMsgType_CONV_TYPE_WEB
}

func (m *ConvHdr) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

type CapConvMsg struct {
	Hdr              *ConvHdr `protobuf:"bytes,1,req,name=hdr" json:"hdr,omitempty"`
	Action           *string  `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
	Lid              *uint64  `protobuf:"varint,3,opt,name=lid" json:"lid,omitempty"`
	Cid              *uint64  `protobuf:"varint,4,opt,name=cid" json:"cid,omitempty"`
	Vid              *uint64  `protobuf:"varint,5,opt,name=vid" json:"vid,omitempty"`
	CreativeId       *uint64  `protobuf:"varint,6,opt,name=creative_id" json:"creative_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CapConvMsg) Reset()                    { *m = CapConvMsg{} }
func (m *CapConvMsg) String() string            { return proto.CompactTextString(m) }
func (*CapConvMsg) ProtoMessage()               {}
func (*CapConvMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CapConvMsg) GetHdr() *ConvHdr {
	if m != nil {
		return m.Hdr
	}
	return nil
}

func (m *CapConvMsg) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *CapConvMsg) GetLid() uint64 {
	if m != nil && m.Lid != nil {
		return *m.Lid
	}
	return 0
}

func (m *CapConvMsg) GetCid() uint64 {
	if m != nil && m.Cid != nil {
		return *m.Cid
	}
	return 0
}

func (m *CapConvMsg) GetVid() uint64 {
	if m != nil && m.Vid != nil {
		return *m.Vid
	}
	return 0
}

func (m *CapConvMsg) GetCreativeId() uint64 {
	if m != nil && m.CreativeId != nil {
		return *m.CreativeId
	}
	return 0
}

// Unique Transaction ID
type CnrUTID struct {
	Cpid             *uint64 `protobuf:"varint,1,req,name=cpid" json:"cpid,omitempty"`
	Tid              *uint64 `protobuf:"varint,2,req,name=tid" json:"tid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CnrUTID) Reset()                    { *m = CnrUTID{} }
func (m *CnrUTID) String() string            { return proto.CompactTextString(m) }
func (*CnrUTID) ProtoMessage()               {}
func (*CnrUTID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CnrUTID) GetCpid() uint64 {
	if m != nil && m.Cpid != nil {
		return *m.Cpid
	}
	return 0
}

func (m *CnrUTID) GetTid() uint64 {
	if m != nil && m.Tid != nil {
		return *m.Tid
	}
	return 0
}

type CnrNumOpqKV struct {
	Key              *uint32 `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CnrNumOpqKV) Reset()                    { *m = CnrNumOpqKV{} }
func (m *CnrNumOpqKV) String() string            { return proto.CompactTextString(m) }
func (*CnrNumOpqKV) ProtoMessage()               {}
func (*CnrNumOpqKV) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CnrNumOpqKV) GetKey() uint32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *CnrNumOpqKV) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CnrOpqKV struct {
	Key              *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CnrOpqKV) Reset()                    { *m = CnrOpqKV{} }
func (m *CnrOpqKV) String() string            { return proto.CompactTextString(m) }
func (*CnrOpqKV) ProtoMessage()               {}
func (*CnrOpqKV) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CnrOpqKV) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *CnrOpqKV) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CrpCookieSyncReq struct {
	Appuid           *string  `protobuf:"bytes,1,opt,name=appuid" json:"appuid,omitempty"`
	TransId          *CnrUTID `protobuf:"bytes,2,opt,name=trans_id" json:"trans_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CrpCookieSyncReq) Reset()                    { *m = CrpCookieSyncReq{} }
func (m *CrpCookieSyncReq) String() string            { return proto.CompactTextString(m) }
func (*CrpCookieSyncReq) ProtoMessage()               {}
func (*CrpCookieSyncReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CrpCookieSyncReq) GetAppuid() string {
	if m != nil && m.Appuid != nil {
		return *m.Appuid
	}
	return ""
}

func (m *CrpCookieSyncReq) GetTransId() *CnrUTID {
	if m != nil {
		return m.TransId
	}
	return nil
}

type CrpCookieSyncResp struct {
	Appuid           *string  `protobuf:"bytes,1,opt,name=appuid" json:"appuid,omitempty"`
	AppuidList       *string  `protobuf:"bytes,2,opt,name=appuid_list" json:"appuid_list,omitempty"`
	TransId          *CnrUTID `protobuf:"bytes,3,opt,name=trans_id" json:"trans_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CrpCookieSyncResp) Reset()                    { *m = CrpCookieSyncResp{} }
func (m *CrpCookieSyncResp) String() string            { return proto.CompactTextString(m) }
func (*CrpCookieSyncResp) ProtoMessage()               {}
func (*CrpCookieSyncResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CrpCookieSyncResp) GetAppuid() string {
	if m != nil && m.Appuid != nil {
		return *m.Appuid
	}
	return ""
}

func (m *CrpCookieSyncResp) GetAppuidList() string {
	if m != nil && m.AppuidList != nil {
		return *m.AppuidList
	}
	return ""
}

func (m *CrpCookieSyncResp) GetTransId() *CnrUTID {
	if m != nil {
		return m.TransId
	}
	return nil
}

// set of app-level user IDs used to uniquely identify an app on a device and
// map it to the network subscriber entry.
// NOTE: repeated values below may appear 0 or more times. If 0, it means
//       there's no UID of that type associated with the user/device
type CnrAppUIDs struct {
	UserId            *string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	AgeCls_DEPRECATED *uint32 `protobuf:"varint,2,opt,name=age_cls_DEPRECATED" json:"age_cls_DEPRECATED,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CnrAppUIDs) Reset()                    { *m = CnrAppUIDs{} }
func (m *CnrAppUIDs) String() string            { return proto.CompactTextString(m) }
func (*CnrAppUIDs) ProtoMessage()               {}
func (*CnrAppUIDs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CnrAppUIDs) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *CnrAppUIDs) GetAgeCls_DEPRECATED() uint32 {
	if m != nil && m.AgeCls_DEPRECATED != nil {
		return *m.AgeCls_DEPRECATED
	}
	return 0
}

type CrpOptOut struct {
	Appuid                       *string `protobuf:"bytes,1,req,name=appuid" json:"appuid,omitempty"`
	OptOut                       *bool   `protobuf:"varint,2,req,name=opt_out" json:"opt_out,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *CrpOptOut) Reset()                    { *m = CrpOptOut{} }
func (m *CrpOptOut) String() string            { return proto.CompactTextString(m) }
func (*CrpOptOut) ProtoMessage()               {}
func (*CrpOptOut) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

var extRange_CrpOptOut = []proto.ExtensionRange{
	{3, 5},
}

func (*CrpOptOut) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_CrpOptOut
}

func (m *CrpOptOut) GetAppuid() string {
	if m != nil && m.Appuid != nil {
		return *m.Appuid
	}
	return ""
}

func (m *CrpOptOut) GetOptOut() bool {
	if m != nil && m.OptOut != nil {
		return *m.OptOut
	}
	return false
}

type CrpWinBcn struct {
	Appuid           *string `protobuf:"bytes,1,req,name=appuid" json:"appuid,omitempty"`
	CampaignItemId   *uint64 `protobuf:"varint,2,req,name=campaign_item_id" json:"campaign_item_id,omitempty"`
	MeasurementId    *uint64 `protobuf:"varint,3,req,name=measurement_id" json:"measurement_id,omitempty"`
	CreativeId       *uint64 `protobuf:"varint,4,req,name=creative_id" json:"creative_id,omitempty"`
	LineItemId       *uint64 `protobuf:"varint,5,opt,name=line_item_id" json:"line_item_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CrpWinBcn) Reset()                    { *m = CrpWinBcn{} }
func (m *CrpWinBcn) String() string            { return proto.CompactTextString(m) }
func (*CrpWinBcn) ProtoMessage()               {}
func (*CrpWinBcn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CrpWinBcn) GetAppuid() string {
	if m != nil && m.Appuid != nil {
		return *m.Appuid
	}
	return ""
}

func (m *CrpWinBcn) GetCampaignItemId() uint64 {
	if m != nil && m.CampaignItemId != nil {
		return *m.CampaignItemId
	}
	return 0
}

func (m *CrpWinBcn) GetMeasurementId() uint64 {
	if m != nil && m.MeasurementId != nil {
		return *m.MeasurementId
	}
	return 0
}

func (m *CrpWinBcn) GetCreativeId() uint64 {
	if m != nil && m.CreativeId != nil {
		return *m.CreativeId
	}
	return 0
}

func (m *CrpWinBcn) GetLineItemId() uint64 {
	if m != nil && m.LineItemId != nil {
		return *m.LineItemId
	}
	return 0
}

type CrpRecReq struct {
	TransId          *CnrUTID       `protobuf:"bytes,1,req,name=trans_id" json:"trans_id,omitempty"`
	AppUids          *CnrAppUIDs    `protobuf:"bytes,2,req,name=app_uids" json:"app_uids,omitempty"`
	Adxid            *uint32        `protobuf:"varint,3,req,name=adxid" json:"adxid,omitempty"`
	Debug            *uint32        `protobuf:"varint,4,req,name=debug" json:"debug,omitempty"`
	Device           *BrqDevice     `protobuf:"bytes,5,opt,name=device" json:"device,omitempty"`
	Slot             []*BrqSlot     `protobuf:"bytes,6,rep,name=slot" json:"slot,omitempty"`
	Pub              *CnrPubCat     `protobuf:"bytes,7,opt,name=pub" json:"pub,omitempty"`
	CmsNumKv         []*CnrNumOpqKV `protobuf:"bytes,8,rep,name=cms_num_kv" json:"cms_num_kv,omitempty"`
	Flags            *uint32        `protobuf:"varint,9,req,name=flags" json:"flags,omitempty"`
	CmsKv            []*CnrOpqKV    `protobuf:"bytes,10,rep,name=cms_kv" json:"cms_kv,omitempty"`
	RecFoldType      *CnrFoldType   `protobuf:"varint,11,opt,name=rec_fold_type,enum=CnrFoldType" json:"rec_fold_type,omitempty"`
	Secure           *uint32        `protobuf:"varint,12,opt,name=secure" json:"secure,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CrpRecReq) Reset()                    { *m = CrpRecReq{} }
func (m *CrpRecReq) String() string            { return proto.CompactTextString(m) }
func (*CrpRecReq) ProtoMessage()               {}
func (*CrpRecReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CrpRecReq) GetTransId() *CnrUTID {
	if m != nil {
		return m.TransId
	}
	return nil
}

func (m *CrpRecReq) GetAppUids() *CnrAppUIDs {
	if m != nil {
		return m.AppUids
	}
	return nil
}

func (m *CrpRecReq) GetAdxid() uint32 {
	if m != nil && m.Adxid != nil {
		return *m.Adxid
	}
	return 0
}

func (m *CrpRecReq) GetDebug() uint32 {
	if m != nil && m.Debug != nil {
		return *m.Debug
	}
	return 0
}

func (m *CrpRecReq) GetDevice() *BrqDevice {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *CrpRecReq) GetSlot() []*BrqSlot {
	if m != nil {
		return m.Slot
	}
	return nil
}

func (m *CrpRecReq) GetPub() *CnrPubCat {
	if m != nil {
		return m.Pub
	}
	return nil
}

func (m *CrpRecReq) GetCmsNumKv() []*CnrNumOpqKV {
	if m != nil {
		return m.CmsNumKv
	}
	return nil
}

func (m *CrpRecReq) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CrpRecReq) GetCmsKv() []*CnrOpqKV {
	if m != nil {
		return m.CmsKv
	}
	return nil
}

func (m *CrpRecReq) GetRecFoldType() CnrFoldType {
	if m != nil && m.RecFoldType != nil {
		return *m.RecFoldType
	}
	return CnrFoldType_CNR_FOLD_TYPE_UNSPECIFIED
}

func (m *CrpRecReq) GetSecure() uint32 {
	if m != nil && m.Secure != nil {
		return *m.Secure
	}
	return 0
}

type CrpRecRep struct {
	TransId                      *CnrUTID       `protobuf:"bytes,1,req,name=trans_id" json:"trans_id,omitempty"`
	Flags                        *uint32        `protobuf:"varint,2,req,name=flags" json:"flags,omitempty"`
	TypeAd                       *uint32        `protobuf:"varint,3,req,name=type_ad" json:"type_ad,omitempty"`
	Ads                          []*CtpTgtAds   `protobuf:"bytes,4,rep,name=ads" json:"ads,omitempty"`
	CmsCcsNumKv                  []*CnrNumOpqKV `protobuf:"bytes,5,rep,name=cms_ccs_num_kv" json:"cms_ccs_num_kv,omitempty"`
	DiscUuid_DEPRECATED          *string        `protobuf:"bytes,6,opt,name=disc_uuid_DEPRECATED" json:"disc_uuid_DEPRECATED,omitempty"`
	NoadsCodes                   *uint64        `protobuf:"varint,7,opt,name=noads_codes" json:"noads_codes,omitempty"`
	CmsCcsKv                     []*CnrOpqKV    `protobuf:"bytes,8,rep,name=cms_ccs_kv" json:"cms_ccs_kv,omitempty"`
	AppUids                      *CnrAppUIDs    `protobuf:"bytes,9,req,name=app_uids" json:"app_uids,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *CrpRecRep) Reset()                    { *m = CrpRecRep{} }
func (m *CrpRecRep) String() string            { return proto.CompactTextString(m) }
func (*CrpRecRep) ProtoMessage()               {}
func (*CrpRecRep) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

var extRange_CrpRecRep = []proto.ExtensionRange{
	{10, 16},
}

func (*CrpRecRep) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_CrpRecRep
}

func (m *CrpRecRep) GetTransId() *CnrUTID {
	if m != nil {
		return m.TransId
	}
	return nil
}

func (m *CrpRecRep) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CrpRecRep) GetTypeAd() uint32 {
	if m != nil && m.TypeAd != nil {
		return *m.TypeAd
	}
	return 0
}

func (m *CrpRecRep) GetAds() []*CtpTgtAds {
	if m != nil {
		return m.Ads
	}
	return nil
}

func (m *CrpRecRep) GetCmsCcsNumKv() []*CnrNumOpqKV {
	if m != nil {
		return m.CmsCcsNumKv
	}
	return nil
}

func (m *CrpRecRep) GetDiscUuid_DEPRECATED() string {
	if m != nil && m.DiscUuid_DEPRECATED != nil {
		return *m.DiscUuid_DEPRECATED
	}
	return ""
}

func (m *CrpRecRep) GetNoadsCodes() uint64 {
	if m != nil && m.NoadsCodes != nil {
		return *m.NoadsCodes
	}
	return 0
}

func (m *CrpRecRep) GetCmsCcsKv() []*CnrOpqKV {
	if m != nil {
		return m.CmsCcsKv
	}
	return nil
}

func (m *CrpRecRep) GetAppUids() *CnrAppUIDs {
	if m != nil {
		return m.AppUids
	}
	return nil
}

type CrpConvBcn struct {
	Msg              *CapConvMsg `protobuf:"bytes,1,req,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CrpConvBcn) Reset()                    { *m = CrpConvBcn{} }
func (m *CrpConvBcn) String() string            { return proto.CompactTextString(m) }
func (*CrpConvBcn) ProtoMessage()               {}
func (*CrpConvBcn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CrpConvBcn) GetMsg() *CapConvMsg {
	if m != nil {
		return m.Msg
	}
	return nil
}

type CrpMsg struct {
	Version *uint32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Flags   *uint32 `protobuf:"varint,2,req,name=flags" json:"flags,omitempty"`
	MsgType *uint32 `protobuf:"varint,3,req,name=msg_type" json:"msg_type,omitempty"`
	//  one of the following messages, depending on the msg_type
	WinBcn           *CrpWinBcn         `protobuf:"bytes,4,opt,name=win_bcn" json:"win_bcn,omitempty"`
	RecReq           *CrpRecReq         `protobuf:"bytes,5,opt,name=rec_req" json:"rec_req,omitempty"`
	RecRep           *CrpRecRep         `protobuf:"bytes,6,opt,name=rec_rep" json:"rec_rep,omitempty"`
	OptOut           *CrpOptOut         `protobuf:"bytes,7,opt,name=opt_out" json:"opt_out,omitempty"`
	ConvBcn          *CrpConvBcn        `protobuf:"bytes,8,opt,name=conv_bcn" json:"conv_bcn,omitempty"`
	CookieSyncReq    *CrpCookieSyncReq  `protobuf:"bytes,9,opt,name=cookie_sync_req" json:"cookie_sync_req,omitempty"`
	CookieSyncResp   *CrpCookieSyncResp `protobuf:"bytes,10,opt,name=cookie_sync_resp" json:"cookie_sync_resp,omitempty"`
	RecReqV2         *CrpRecReqV2       `protobuf:"bytes,11,opt,name=rec_req_v2" json:"rec_req_v2,omitempty"`
	RecRepV2         *CrpRecRepV2       `protobuf:"bytes,12,opt,name=rec_rep_v2" json:"rec_rep_v2,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CrpMsg) Reset()                    { *m = CrpMsg{} }
func (m *CrpMsg) String() string            { return proto.CompactTextString(m) }
func (*CrpMsg) ProtoMessage()               {}
func (*CrpMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CrpMsg) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CrpMsg) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CrpMsg) GetMsgType() uint32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *CrpMsg) GetWinBcn() *CrpWinBcn {
	if m != nil {
		return m.WinBcn
	}
	return nil
}

func (m *CrpMsg) GetRecReq() *CrpRecReq {
	if m != nil {
		return m.RecReq
	}
	return nil
}

func (m *CrpMsg) GetRecRep() *CrpRecRep {
	if m != nil {
		return m.RecRep
	}
	return nil
}

func (m *CrpMsg) GetOptOut() *CrpOptOut {
	if m != nil {
		return m.OptOut
	}
	return nil
}

func (m *CrpMsg) GetConvBcn() *CrpConvBcn {
	if m != nil {
		return m.ConvBcn
	}
	return nil
}

func (m *CrpMsg) GetCookieSyncReq() *CrpCookieSyncReq {
	if m != nil {
		return m.CookieSyncReq
	}
	return nil
}

func (m *CrpMsg) GetCookieSyncResp() *CrpCookieSyncResp {
	if m != nil {
		return m.CookieSyncResp
	}
	return nil
}

func (m *CrpMsg) GetRecReqV2() *CrpRecReqV2 {
	if m != nil {
		return m.RecReqV2
	}
	return nil
}

func (m *CrpMsg) GetRecRepV2() *CrpRecRepV2 {
	if m != nil {
		return m.RecRepV2
	}
	return nil
}

type CrpRecReqV2 struct {
	TransId          *CnrUTID       `protobuf:"bytes,1,opt,name=trans_id" json:"trans_id,omitempty"`
	AppUids          *CnrAppUIDs    `protobuf:"bytes,2,opt,name=app_uids" json:"app_uids,omitempty"`
	Adxid            *uint32        `protobuf:"varint,3,opt,name=adxid" json:"adxid,omitempty"`
	Debug            *uint32        `protobuf:"varint,4,opt,name=debug" json:"debug,omitempty"`
	Device           *BrqDevice     `protobuf:"bytes,5,opt,name=device" json:"device,omitempty"`
	Slot             []*BrqSlot     `protobuf:"bytes,6,rep,name=slot" json:"slot,omitempty"`
	Pub              *CnrPubCat     `protobuf:"bytes,7,opt,name=pub" json:"pub,omitempty"`
	CmsNumKv         []*CnrNumOpqKV `protobuf:"bytes,8,rep,name=cms_num_kv" json:"cms_num_kv,omitempty"`
	Flags            *uint32        `protobuf:"varint,9,opt,name=flags" json:"flags,omitempty"`
	CmsKv            []*CnrOpqKV    `protobuf:"bytes,10,rep,name=cms_kv" json:"cms_kv,omitempty"`
	RecFoldType      *CnrFoldType   `protobuf:"varint,11,opt,name=rec_fold_type,enum=CnrFoldType" json:"rec_fold_type,omitempty"`
	Secure           *uint32        `protobuf:"varint,12,opt,name=secure" json:"secure,omitempty"`
	DspId            *uint32        `protobuf:"varint,13,opt,name=dsp_id" json:"dsp_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CrpRecReqV2) Reset()                    { *m = CrpRecReqV2{} }
func (m *CrpRecReqV2) String() string            { return proto.CompactTextString(m) }
func (*CrpRecReqV2) ProtoMessage()               {}
func (*CrpRecReqV2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CrpRecReqV2) GetTransId() *CnrUTID {
	if m != nil {
		return m.TransId
	}
	return nil
}

func (m *CrpRecReqV2) GetAppUids() *CnrAppUIDs {
	if m != nil {
		return m.AppUids
	}
	return nil
}

func (m *CrpRecReqV2) GetAdxid() uint32 {
	if m != nil && m.Adxid != nil {
		return *m.Adxid
	}
	return 0
}

func (m *CrpRecReqV2) GetDebug() uint32 {
	if m != nil && m.Debug != nil {
		return *m.Debug
	}
	return 0
}

func (m *CrpRecReqV2) GetDevice() *BrqDevice {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *CrpRecReqV2) GetSlot() []*BrqSlot {
	if m != nil {
		return m.Slot
	}
	return nil
}

func (m *CrpRecReqV2) GetPub() *CnrPubCat {
	if m != nil {
		return m.Pub
	}
	return nil
}

func (m *CrpRecReqV2) GetCmsNumKv() []*CnrNumOpqKV {
	if m != nil {
		return m.CmsNumKv
	}
	return nil
}

func (m *CrpRecReqV2) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CrpRecReqV2) GetCmsKv() []*CnrOpqKV {
	if m != nil {
		return m.CmsKv
	}
	return nil
}

func (m *CrpRecReqV2) GetRecFoldType() CnrFoldType {
	if m != nil && m.RecFoldType != nil {
		return *m.RecFoldType
	}
	return CnrFoldType_CNR_FOLD_TYPE_UNSPECIFIED
}

func (m *CrpRecReqV2) GetSecure() uint32 {
	if m != nil && m.Secure != nil {
		return *m.Secure
	}
	return 0
}

func (m *CrpRecReqV2) GetDspId() uint32 {
	if m != nil && m.DspId != nil {
		return *m.DspId
	}
	return 0
}

type CrpRecRepV2 struct {
	TransId             *CnrUTID       `protobuf:"bytes,1,opt,name=trans_id" json:"trans_id,omitempty"`
	Flags               *uint32        `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
	TypeAd              *uint32        `protobuf:"varint,3,opt,name=type_ad" json:"type_ad,omitempty"`
	Ads                 []*CtpTgtAds   `protobuf:"bytes,4,rep,name=ads" json:"ads,omitempty"`
	CmsCcsNumKv         []*CnrNumOpqKV `protobuf:"bytes,5,rep,name=cms_ccs_num_kv" json:"cms_ccs_num_kv,omitempty"`
	DiscUuid_DEPRECATED *string        `protobuf:"bytes,6,opt,name=disc_uuid_DEPRECATED" json:"disc_uuid_DEPRECATED,omitempty"`
	NoadsCodes          *uint64        `protobuf:"varint,7,opt,name=noads_codes" json:"noads_codes,omitempty"`
	CmsCcsKv            []*CnrOpqKV    `protobuf:"bytes,8,rep,name=cms_ccs_kv" json:"cms_ccs_kv,omitempty"`
	AppUids             *CnrAppUIDs    `protobuf:"bytes,9,opt,name=app_uids" json:"app_uids,omitempty"`
	DspId               *uint32        `protobuf:"varint,10,opt,name=dsp_id" json:"dsp_id,omitempty"`
	XXX_unrecognized    []byte         `json:"-"`
}

func (m *CrpRecRepV2) Reset()                    { *m = CrpRecRepV2{} }
func (m *CrpRecRepV2) String() string            { return proto.CompactTextString(m) }
func (*CrpRecRepV2) ProtoMessage()               {}
func (*CrpRecRepV2) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CrpRecRepV2) GetTransId() *CnrUTID {
	if m != nil {
		return m.TransId
	}
	return nil
}

func (m *CrpRecRepV2) GetFlags() uint32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CrpRecRepV2) GetTypeAd() uint32 {
	if m != nil && m.TypeAd != nil {
		return *m.TypeAd
	}
	return 0
}

func (m *CrpRecRepV2) GetAds() []*CtpTgtAds {
	if m != nil {
		return m.Ads
	}
	return nil
}

func (m *CrpRecRepV2) GetCmsCcsNumKv() []*CnrNumOpqKV {
	if m != nil {
		return m.CmsCcsNumKv
	}
	return nil
}

func (m *CrpRecRepV2) GetDiscUuid_DEPRECATED() string {
	if m != nil && m.DiscUuid_DEPRECATED != nil {
		return *m.DiscUuid_DEPRECATED
	}
	return ""
}

func (m *CrpRecRepV2) GetNoadsCodes() uint64 {
	if m != nil && m.NoadsCodes != nil {
		return *m.NoadsCodes
	}
	return 0
}

func (m *CrpRecRepV2) GetCmsCcsKv() []*CnrOpqKV {
	if m != nil {
		return m.CmsCcsKv
	}
	return nil
}

func (m *CrpRecRepV2) GetAppUids() *CnrAppUIDs {
	if m != nil {
		return m.AppUids
	}
	return nil
}

func (m *CrpRecRepV2) GetDspId() uint32 {
	if m != nil && m.DspId != nil {
		return *m.DspId
	}
	return 0
}

type DspReq struct {
	DspId            *uint32 `protobuf:"varint,1,opt,name=dsp_id" json:"dsp_id,omitempty"`
	TransId          *uint64 `protobuf:"varint,2,opt,name=trans_id" json:"trans_id,omitempty"`
	UserId           *string `protobuf:"bytes,3,opt,name=user_id" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DspReq) Reset()                    { *m = DspReq{} }
func (m *DspReq) String() string            { return proto.CompactTextString(m) }
func (*DspReq) ProtoMessage()               {}
func (*DspReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *DspReq) GetDspId() uint32 {
	if m != nil && m.DspId != nil {
		return *m.DspId
	}
	return 0
}

func (m *DspReq) GetTransId() uint64 {
	if m != nil && m.TransId != nil {
		return *m.TransId
	}
	return 0
}

func (m *DspReq) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

type DspRsp struct {
	TransId          *uint64  `protobuf:"varint,1,opt,name=trans_id" json:"trans_id,omitempty"`
	UserId           *string  `protobuf:"bytes,2,opt,name=user_id" json:"user_id,omitempty"`
	CampItemId       []uint64 `protobuf:"varint,3,rep,name=camp_item_id" json:"camp_item_id,omitempty"`
	NoadsCodes       *uint64  `protobuf:"varint,4,opt,name=noads_codes" json:"noads_codes,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DspRsp) Reset()                    { *m = DspRsp{} }
func (m *DspRsp) String() string            { return proto.CompactTextString(m) }
func (*DspRsp) ProtoMessage()               {}
func (*DspRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DspRsp) GetTransId() uint64 {
	if m != nil && m.TransId != nil {
		return *m.TransId
	}
	return 0
}

func (m *DspRsp) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *DspRsp) GetCampItemId() []uint64 {
	if m != nil {
		return m.CampItemId
	}
	return nil
}

func (m *DspRsp) GetNoadsCodes() uint64 {
	if m != nil && m.NoadsCodes != nil {
		return *m.NoadsCodes
	}
	return 0
}

func init() {
	proto.RegisterType((*BrqDevice)(nil), "BrqDevice")
	proto.RegisterType((*BrqSlot)(nil), "BrqSlot")
	proto.RegisterType((*CnrPubCat)(nil), "CnrPubCat")
	proto.RegisterType((*CtpTgtAds)(nil), "CtpTgtAds")
	proto.RegisterType((*ConvHdr)(nil), "ConvHdr")
	proto.RegisterType((*CapConvMsg)(nil), "CapConvMsg")
	proto.RegisterType((*CnrUTID)(nil), "CnrUTID")
	proto.RegisterType((*CnrNumOpqKV)(nil), "CnrNumOpqKV")
	proto.RegisterType((*CnrOpqKV)(nil), "CnrOpqKV")
	proto.RegisterType((*CrpCookieSyncReq)(nil), "CrpCookieSyncReq")
	proto.RegisterType((*CrpCookieSyncResp)(nil), "CrpCookieSyncResp")
	proto.RegisterType((*CnrAppUIDs)(nil), "CnrAppUIDs")
	proto.RegisterType((*CrpOptOut)(nil), "CrpOptOut")
	proto.RegisterType((*CrpWinBcn)(nil), "CrpWinBcn")
	proto.RegisterType((*CrpRecReq)(nil), "CrpRecReq")
	proto.RegisterType((*CrpRecRep)(nil), "CrpRecRep")
	proto.RegisterType((*CrpConvBcn)(nil), "CrpConvBcn")
	proto.RegisterType((*CrpMsg)(nil), "CrpMsg")
	proto.RegisterType((*CrpRecReqV2)(nil), "CrpRecReqV2")
	proto.RegisterType((*CrpRecRepV2)(nil), "CrpRecRepV2")
	proto.RegisterType((*DspReq)(nil), "DspReq")
	proto.RegisterType((*DspRsp)(nil), "DspRsp")
	proto.RegisterEnum("CnrFoldType", CnrFoldType_name, CnrFoldType_value)
	proto.RegisterEnum("ConvMsgType", ConvMsgType_name, ConvMsgType_value)
	proto.RegisterEnum("CrpMsgType", CrpMsgType_name, CrpMsgType_value)
	proto.RegisterEnum("CrpNoAdsCodes", CrpNoAdsCodes_name, CrpNoAdsCodes_value)
}

func init() { proto.RegisterFile("crp.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1503 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x57, 0xcb, 0x8e, 0xda, 0x56,
	0x18, 0xae, 0xc1, 0xc3, 0xe5, 0x00, 0x33, 0x1e, 0x72, 0x29, 0x49, 0x1b, 0x29, 0xa2, 0x51, 0xd5,
	0x8e, 0x2a, 0x16, 0x2c, 0x2a, 0x55, 0x95, 0xaa, 0x70, 0x9b, 0x29, 0x0a, 0x18, 0x0a, 0xcc, 0x4c,
	0xb3, 0xe9, 0x91, 0x31, 0x0e, 0xe3, 0x0e, 0xd8, 0x67, 0x6c, 0x43, 0x32, 0xbb, 0xec, 0xaa, 0xbe,
	0x48, 0x1f, 0xa0, 0xcf, 0xd0, 0x65, 0x9f, 0xa2, 0xdb, 0x3e, 0x43, 0xa5, 0x7e, 0xe7, 0x37, 0x36,
	0x1e, 0x88, 0xd2, 0x4d, 0xa5, 0x76, 0xc7, 0xf9, 0xcf, 0x7f, 0xf9, 0xfe, 0xef, 0xbf, 0x1c, 0xc3,
	0xf2, 0xa6, 0x27, 0x6a, 0xc2, 0x73, 0x03, 0xb7, 0xfa, 0x93, 0xc2, 0xf2, 0x4d, 0xef, 0xa6, 0x6d,
	0xad, 0x6d, 0xd3, 0x2a, 0x33, 0x96, 0x72, 0xfd, 0x8a, 0xf2, 0x54, 0xf9, 0x2c, 0x5f, 0x2e, 0xb0,
	0xb4, 0xeb, 0xaf, 0x2b, 0x29, 0x3a, 0x14, 0x99, 0xba, 0x34, 0xae, 0xad, 0x4a, 0x9a, 0x4e, 0x25,
	0x76, 0xb0, 0x74, 0x67, 0xd6, 0xa2, 0xa2, 0xd2, 0x51, 0x63, 0xb9, 0xa9, 0xe7, 0xbe, 0x0e, 0x6e,
	0x85, 0x55, 0x39, 0x80, 0xa4, 0x54, 0x3e, 0x62, 0x59, 0x29, 0x59, 0x5b, 0x5e, 0x25, 0x13, 0x09,
	0x4c, 0xc3, 0xf3, 0x6c, 0x08, 0xb2, 0x24, 0x40, 0x24, 0x5b, 0x54, 0x72, 0xf2, 0xf7, 0x89, 0x9a,
	0xcb, 0x6b, 0x5a, 0xf5, 0x17, 0x85, 0x65, 0x81, 0x64, 0xbc, 0x70, 0x03, 0x19, 0xe0, 0xb5, 0x3d,
	0x0b, 0xae, 0x00, 0x25, 0x05, 0xe5, 0x43, 0x96, 0xb9, 0xb2, 0xec, 0xf9, 0x55, 0x00, 0x34, 0xf2,
	0x8c, 0xeb, 0x57, 0xee, 0x62, 0x26, 0x00, 0x47, 0x1e, 0x8f, 0x59, 0x7e, 0xfa, 0xca, 0x5e, 0x58,
	0x04, 0x40, 0x85, 0x48, 0x95, 0x1a, 0xd3, 0x85, 0xe1, 0xcc, 0x81, 0x47, 0x1e, 0x01, 0x7f, 0x6a,
	0x1a, 0x01, 0xc0, 0xc8, 0x93, 0xc4, 0x6b, 0xba, 0x4e, 0x60, 0x39, 0x01, 0xd0, 0x48, 0xc9, 0x7d,
	0x56, 0x14, 0x0b, 0xc3, 0xb4, 0x96, 0x10, 0x71, 0x7b, 0x46, 0xb8, 0x54, 0x09, 0x7a, 0x69, 0x3b,
	0xdc, 0x14, 0xcb, 0x4a, 0x1e, 0x82, 0x34, 0x80, 0x32, 0x00, 0xb5, 0x59, 0xbe, 0xe5, 0x78, 0xc3,
	0xd5, 0xb4, 0x65, 0x04, 0x64, 0xb9, 0x9a, 0x2e, 0x6c, 0xff, 0xca, 0xf2, 0xa4, 0xa5, 0x12, 0x59,
	0xfa, 0x76, 0x60, 0x49, 0x41, 0x8a, 0x04, 0x20, 0x53, 0xc6, 0x4f, 0x47, 0x87, 0x95, 0x17, 0x91,
	0xf7, 0x80, 0x95, 0x6c, 0x67, 0x8d, 0xb8, 0xae, 0x77, 0xcb, 0xa5, 0x8e, 0x64, 0x50, 0x45, 0xa8,
	0x8c, 0x56, 0xa8, 0x3e, 0x47, 0xa8, 0x40, 0x4c, 0xe6, 0x41, 0x63, 0xe6, 0xcb, 0x9c, 0x8c, 0x59,
	0x18, 0x43, 0x62, 0x06, 0x29, 0xa6, 0xb7, 0x09, 0x91, 0x0e, 0xcf, 0xee, 0xf4, 0x47, 0x79, 0x96,
	0xac, 0x48, 0x0f, 0x2a, 0x3c, 0xd4, 0x59, 0xb6, 0xe5, 0x3a, 0xeb, 0x6f, 0x67, 0x5e, 0xf9, 0x31,
	0x53, 0x89, 0x21, 0x69, 0x7e, 0x58, 0x2f, 0xd6, 0x40, 0xc1, 0xba, 0xef, 0xcf, 0x27, 0x90, 0x11,
	0xa4, 0x08, 0x6c, 0xd5, 0x65, 0xac, 0x65, 0x88, 0x56, 0x78, 0x0d, 0x80, 0xe9, 0xab, 0x99, 0x47,
	0x56, 0x85, 0x7a, 0xae, 0x16, 0x79, 0x43, 0x38, 0xc3, 0x0c, 0x6c, 0xd7, 0xd9, 0x74, 0x08, 0x3c,
	0x2c, 0x28, 0x76, 0x94, 0x2e, 0x0e, 0x6a, 0x74, 0x58, 0xe3, 0x40, 0x79, 0x95, 0xef, 0xb1, 0x02,
	0x50, 0x1b, 0x81, 0xbd, 0x26, 0xe8, 0x19, 0x0a, 0xf8, 0x0c, 0x20, 0x1d, 0xef, 0x7c, 0xd2, 0x6d,
	0xcb, 0x4a, 0x99, 0x22, 0xce, 0x11, 0xa6, 0x01, 0xc1, 0xc2, 0xa1, 0xfa, 0x39, 0x2b, 0x40, 0x4b,
	0x5f, 0x2d, 0x07, 0xe2, 0xe6, 0xc5, 0x85, 0xbc, 0xbb, 0xb6, 0x6e, 0x37, 0x1d, 0x02, 0x6e, 0xd6,
	0xc6, 0x62, 0x65, 0x91, 0x6a, 0xbe, 0xfa, 0x29, 0xcb, 0x41, 0x75, 0x4f, 0x2f, 0xbf, 0xab, 0xf7,
	0x0d, 0xd3, 0x5a, 0x1e, 0x32, 0x75, 0xaf, 0x6d, 0x6b, 0x7c, 0xeb, 0x98, 0x23, 0xeb, 0x86, 0x12,
	0x13, 0x62, 0xb5, 0xa9, 0x65, 0x1e, 0xb4, 0xe5, 0x02, 0xcf, 0x70, 0xfc, 0xa8, 0x98, 0x44, 0x42,
	0x88, 0xb6, 0x3a, 0x61, 0xc7, 0x3b, 0xf6, 0xbe, 0xd8, 0x73, 0x80, 0x94, 0xc3, 0x33, 0x47, 0x9b,
	0x04, 0x1b, 0xba, 0x92, 0x5e, 0xd3, 0x3b, 0x5e, 0xbf, 0x02, 0xff, 0x8e, 0xd7, 0x10, 0xe2, 0xbc,
	0xdb, 0xf6, 0x65, 0x2f, 0xad, 0xfc, 0x6d, 0x73, 0x49, 0xd3, 0xb2, 0x31, 0xb7, 0xb8, 0xb9, 0xf0,
	0x79, 0xbb, 0x33, 0x1c, 0x75, 0x5a, 0x8d, 0x49, 0xa7, 0x4d, 0x6e, 0x4b, 0x28, 0x77, 0x1e, 0x80,
	0x06, 0x22, 0x18, 0xac, 0x82, 0x3b, 0x40, 0x64, 0xf2, 0xf0, 0xe4, 0x8a, 0x80, 0xbb, 0xab, 0x70,
	0x8e, 0x72, 0x68, 0x91, 0xb4, 0x96, 0xa9, 0xbe, 0x21, 0x9b, 0x4b, 0xdb, 0x69, 0x9a, 0xce, 0x9e,
	0x4d, 0x85, 0x69, 0xa6, 0xb1, 0x14, 0x86, 0x3d, 0x77, 0x38, 0x3a, 0x7a, 0xc9, 0xa3, 0x72, 0x94,
	0x1f, 0xb2, 0xc3, 0xa5, 0x65, 0xf8, 0x2b, 0x2f, 0x9e, 0x1a, 0xea, 0xbb, 0xdd, 0x0a, 0xab, 0xd1,
	0x80, 0x2d, 0x6c, 0xc7, 0x8a, 0x5d, 0x50, 0x33, 0x54, 0x7f, 0x4d, 0x51, 0xe8, 0x91, 0x45, 0xc4,
	0x27, 0x29, 0x89, 0xbb, 0x6d, 0xd3, 0x16, 0x4f, 0x58, 0x0e, 0xb0, 0x38, 0x70, 0xf9, 0x14, 0xbe,
	0x50, 0x2f, 0xd4, 0x12, 0x1c, 0xd1, 0x68, 0xbc, 0xd9, 0x40, 0xa0, 0x6e, 0x98, 0x59, 0xd3, 0xd5,
	0x9c, 0x82, 0x97, 0xe0, 0x38, 0x33, 0xa3, 0xfd, 0x46, 0x61, 0x0b, 0x75, 0x56, 0xdb, 0x6e, 0xbc,
	0x87, 0x4c, 0xf5, 0xb1, 0x71, 0xd0, 0x88, 0x69, 0x0a, 0x18, 0x6d, 0xa0, 0x0f, 0x59, 0x1a, 0x73,
	0x4d, 0xcb, 0x4a, 0x1a, 0x6c, 0x07, 0xfe, 0x29, 0x63, 0xe6, 0xd2, 0xe7, 0xce, 0x6a, 0xc9, 0xaf,
	0xd7, 0x58, 0x14, 0xd2, 0xac, 0x58, 0x4b, 0x36, 0xa6, 0xdc, 0x4e, 0x0b, 0x63, 0xee, 0x63, 0x69,
	0xc8, 0xe8, 0x8f, 0x30, 0xa7, 0x30, 0x80, 0x32, 0x23, 0xe5, 0x7c, 0x2d, 0x6e, 0xcd, 0x4f, 0x58,
	0xc9, 0xb3, 0x4c, 0x2e, 0x77, 0x19, 0xa7, 0xd1, 0x2c, 0x20, 0xdc, 0x61, 0xe8, 0xee, 0x14, 0x42,
	0x1a, 0x4d, 0x54, 0xc4, 0xb7, 0x4c, 0xd0, 0x5c, 0x29, 0x52, 0x89, 0xff, 0x52, 0xb6, 0xa4, 0x89,
	0xf7, 0x92, 0x16, 0x03, 0x09, 0xb7, 0x26, 0xca, 0x2f, 0x83, 0x70, 0x23, 0xa2, 0x09, 0x39, 0x1a,
	0xe0, 0x53, 0x25, 0x58, 0xc8, 0x31, 0xde, 0x34, 0xcf, 0xd8, 0xa1, 0x84, 0x6c, 0x9a, 0x71, 0x9e,
	0x07, 0xef, 0xc8, 0xf3, 0x63, 0x76, 0x7f, 0x66, 0xfb, 0x26, 0x5f, 0xc9, 0xd6, 0x4e, 0x74, 0x62,
	0x26, 0xea, 0x7a, 0xc7, 0x85, 0x7b, 0x6e, 0xe2, 0xa5, 0xf0, 0x89, 0x48, 0x15, 0x65, 0x64, 0x91,
	0xe3, 0x98, 0xbc, 0x04, 0x1f, 0xc9, 0x2a, 0xe7, 0xf7, 0xaa, 0x4c, 0xeb, 0xf7, 0x18, 0xb3, 0xcd,
	0x68, 0xe6, 0x9c, 0xb5, 0xec, 0xd7, 0x0a, 0x4b, 0x2f, 0xfd, 0xf9, 0x26, 0x75, 0x68, 0xc7, 0x7b,
	0xab, 0xfa, 0x67, 0x8a, 0x65, 0xa0, 0x28, 0x57, 0x18, 0x32, 0xc7, 0x53, 0xe4, 0xcb, 0x65, 0x15,
	0xaf, 0x8b, 0x24, 0x33, 0x78, 0x10, 0xe0, 0x24, 0x2c, 0x41, 0x48, 0xcd, 0x47, 0x2c, 0xfb, 0x1a,
	0xab, 0x7f, 0x6a, 0x3a, 0xb4, 0xc4, 0x88, 0x9e, 0x78, 0x46, 0x70, 0x29, 0xcb, 0xe6, 0x59, 0x37,
	0x71, 0x43, 0x6d, 0xbb, 0x38, 0xbe, 0x14, 0x44, 0x44, 0xf2, 0x52, 0xc8, 0xcb, 0x68, 0x02, 0xb3,
	0xdb, 0xcb, 0xcd, 0xb8, 0x22, 0x7b, 0xb9, 0x92, 0x29, 0x68, 0x8e, 0x6e, 0x0b, 0xb5, 0x44, 0xa6,
	0x27, 0xec, 0xc8, 0xa4, 0x45, 0xc3, 0x7d, 0x6c, 0x1a, 0x8a, 0x9e, 0x27, 0xad, 0xe3, 0xda, 0xde,
	0x0e, 0xfb, 0x02, 0x53, 0x7b, 0x47, 0xd7, 0x17, 0xe8, 0x3e, 0xa9, 0x5c, 0xae, 0xed, 0x2f, 0x2c,
	0xb4, 0xf4, 0x26, 0x1f, 0xbe, 0xae, 0x53, 0x0f, 0x52, 0xa9, 0xa3, 0x94, 0x2e, 0xea, 0x5b, 0x0d,
	0x21, 0x35, 0x8a, 0x3b, 0x1a, 0xe2, 0xa2, 0x5e, 0xfd, 0x2d, 0x85, 0xed, 0x9c, 0xb0, 0xb8, 0xdb,
	0x97, 0xca, 0x7b, 0x86, 0x59, 0x79, 0xcf, 0x30, 0x2b, 0x77, 0x87, 0x59, 0xf9, 0x4f, 0x87, 0x59,
	0xf9, 0xf7, 0x87, 0x59, 0x9e, 0x67, 0xbe, 0x90, 0x24, 0x95, 0x68, 0xb8, 0x7f, 0x4e, 0xd0, 0x28,
	0xfe, 0x81, 0xc6, 0x44, 0x13, 0x2b, 0xbb, 0xe3, 0xad, 0xfc, 0xff, 0xc7, 0x7b, 0xaf, 0xee, 0x5b,
	0x2e, 0x18, 0x71, 0xf1, 0x35, 0xcb, 0xb4, 0x7d, 0xb1, 0x79, 0x92, 0x37, 0x37, 0x0a, 0x65, 0xa6,
	0xed, 0x3c, 0xc9, 0x6a, 0xf2, 0x91, 0xa4, 0x4f, 0xd4, 0xea, 0x45, 0x68, 0x8c, 0xee, 0xd6, 0x76,
	0x28, 0xbc, 0xa3, 0x1c, 0x3e, 0xc6, 0x78, 0x9d, 0xe4, 0x23, 0x17, 0xbf, 0x4e, 0x69, 0xfa, 0xa0,
	0xda, 0x49, 0x91, 0x3e, 0x66, 0x4e, 0x7e, 0xa0, 0x8f, 0x90, 0xb8, 0x9e, 0x4f, 0xd8, 0xa3, 0x96,
	0x3e, 0xe2, 0xa7, 0x83, 0x5e, 0x9b, 0x4f, 0x5e, 0x0e, 0x3b, 0xfc, 0x5c, 0x1f, 0x0f, 0x3b, 0xad,
	0xee, 0x69, 0xb7, 0xd3, 0xd6, 0x14, 0x94, 0xe0, 0xde, 0xdd, 0xeb, 0x46, 0x73, 0x70, 0xd1, 0xd1,
	0x52, 0xfb, 0x17, 0xcd, 0x4e, 0x6f, 0x70, 0xa9, 0xa9, 0x27, 0x5f, 0xe2, 0xf5, 0x4c, 0x7c, 0x97,
	0x1d, 0xb3, 0x52, 0x6b, 0xa0, 0x5f, 0x84, 0x3a, 0x97, 0x9d, 0xa6, 0xf6, 0x01, 0xc0, 0x6a, 0x09,
	0x51, 0xa3, 0xf7, 0xa2, 0xab, 0x6b, 0xca, 0xc9, 0xef, 0x0a, 0xad, 0xc5, 0xc8, 0xee, 0x08, 0x30,
	0x47, 0x43, 0xde, 0x1f, 0x9f, 0xf1, 0x51, 0x67, 0x0c, 0xab, 0x32, 0x3b, 0xdc, 0x0a, 0x5a, 0xa3,
	0xce, 0x77, 0x40, 0xb7, 0x2b, 0x1b, 0x02, 0x98, 0xc6, 0x8a, 0x91, 0xec, 0xb2, 0xd9, 0xd2, 0xb5,
	0x74, 0x52, 0x6b, 0x30, 0x9c, 0x0c, 0xce, 0x27, 0x9a, 0xa4, 0xe6, 0x28, 0x92, 0x49, 0x2c, 0x52,
	0xf1, 0x00, 0xb3, 0xf1, 0x60, 0x2b, 0x1c, 0xbc, 0xe8, 0x76, 0xc6, 0x2f, 0x75, 0x8a, 0x94, 0x41,
	0x1b, 0x3f, 0x7c, 0xd7, 0xd5, 0x78, 0xa8, 0x65, 0x93, 0x50, 0xfb, 0x8d, 0xef, 0xb5, 0xdc, 0xe3,
	0x14, 0xd2, 0xf9, 0x43, 0x41, 0xe2, 0x9e, 0xd0, 0x5d, 0xf4, 0x6b, 0x4b, 0xd2, 0x2f, 0x81, 0x4d,
	0xce, 0x26, 0x7c, 0xa0, 0xf7, 0x5e, 0xf2, 0xf1, 0x79, 0x13, 0xf0, 0x8b, 0x2c, 0xa7, 0x9f, 0xf7,
	0x7a, 0xbc, 0x3d, 0xee, 0x02, 0x38, 0x98, 0x6a, 0xb4, 0xfb, 0x70, 0xdf, 0xef, 0xf3, 0xd3, 0x46,
	0xb7, 0xa7, 0xa9, 0xe4, 0xb9, 0x7f, 0x76, 0xc9, 0xf5, 0x01, 0x91, 0x90, 0xa3, 0xe4, 0xa4, 0xa0,
	0xdd, 0x0c, 0x55, 0x34, 0x7c, 0x1c, 0x66, 0xdb, 0xfa, 0x84, 0x5c, 0x3c, 0xa5, 0x4c, 0xd1, 0xe2,
	0x09, 0x1f, 0xcf, 0xf1, 0xbe, 0xdc, 0x23, 0x13, 0x38, 0x18, 0xb5, 0x60, 0x78, 0x16, 0x5e, 0xbc,
	0x95, 0xb5, 0x2d, 0x6f, 0xb5, 0xb7, 0x17, 0x29, 0x7c, 0x30, 0x6b, 0x61, 0xd8, 0x51, 0x9f, 0x77,
	0xf4, 0x46, 0xb3, 0x87, 0x56, 0x78, 0x2b, 0xff, 0x83, 0x64, 0x07, 0x7a, 0x87, 0x42, 0xbd, 0xa5,
	0x24, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x40, 0x3a, 0x61, 0x9d, 0x87, 0x0d, 0x00, 0x00,
}
